
configurations {
  all {
    resolutionStrategy {
      // TODO drop forced version. Refer to https://github.com/jhipster/generator-jhipster/issues/22579
      force "org.hibernate.orm:hibernate-core:${hibernateVersion}"
      // TODO drop forced version. Refer to https://github.com/jhipster/generator-jhipster/issues/22579
      force "org.hibernate.orm:hibernate-jcache:${hibernateVersion}"
    }
  }
}

dependencies {


}

ext {
    springProfiles = "dev" + springProfiles
}



bootRun {
    args = ["--spring.profiles.active=${springProfiles}"]
}

task webapp(type: NpmTask) {
    inputs.property('appVersion', project.version)
    inputs.files("package-lock.json")
        .withPropertyName('package-lock')
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.files("build.gradle")
        .withPropertyName('build.gradle')
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.files("angular.json")
        .withPropertyName('angular.json')
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.files("tsconfig.json", "tsconfig.app.json")
        .withPropertyName("tsconfig")
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir("webpack/")
        .withPropertyName("webpack/")
        .withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir("src/main/webapp/")
        .withPropertyName("webapp-source-dir")
        .withPathSensitivity(PathSensitivity.RELATIVE)
    outputs.dir("build/resources/main/static/")
        .withPropertyName("webapp-build-dir")

    dependsOn npmInstall

    args = ["run", "webapp:build"]
    environment = [APP_VERSION: project.version]
}

processResources {
    inputs.property('version', version)
    inputs.property('springProfiles', springProfiles)
    filesMatching("**/application.yml") {
        filter {
            it.replace("#project.version#", version)
        }
        filter {
            it.replace("#spring.profiles.active#", springProfiles)
        }
    }
}

processResources.dependsOn webapp
bootJar.dependsOn processResources
